<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juwen.ibc.dao.IExamLoreExercisesCurriculumDAO">
  <resultMap id="BaseResultMap" type="com.juwen.ibc.pojo.ExamLoreExercisesCurriculum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exam_lore_exercises_id" jdbcType="INTEGER" property="examLoreExercisesId" />
    <result column="curriculum_id" jdbcType="INTEGER" property="curriculumId" />
    <result column="exam_lore_exercises_new_id" jdbcType="VARCHAR" property="examLoreExercisesNewId" />
    <result column="curriculum_new_id" jdbcType="VARCHAR" property="curriculumNewId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, exam_lore_exercises_id, curriculum_id, exam_lore_exercises_new_id, curriculum_new_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_lore_exercises_curriculum
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_lore_exercises_curriculum
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.juwen.ibc.pojo.ExamLoreExercisesCurriculum">
    insert into exam_lore_exercises_curriculum (id, exam_lore_exercises_id, curriculum_id, 
      exam_lore_exercises_new_id, curriculum_new_id
      )
    values (#{id,jdbcType=INTEGER}, #{examLoreExercisesId,jdbcType=INTEGER}, #{curriculumId,jdbcType=INTEGER}, 
      #{examLoreExercisesNewId,jdbcType=VARCHAR}, #{curriculumNewId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.juwen.ibc.pojo.ExamLoreExercisesCurriculum">
    insert into exam_lore_exercises_curriculum
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="examLoreExercisesId != null">
        exam_lore_exercises_id,
      </if>
      <if test="curriculumId != null">
        curriculum_id,
      </if>
      <if test="examLoreExercisesNewId != null">
        exam_lore_exercises_new_id,
      </if>
      <if test="curriculumNewId != null">
        curriculum_new_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="examLoreExercisesId != null">
        #{examLoreExercisesId,jdbcType=INTEGER},
      </if>
      <if test="curriculumId != null">
        #{curriculumId,jdbcType=INTEGER},
      </if>
      <if test="examLoreExercisesNewId != null">
        #{examLoreExercisesNewId,jdbcType=VARCHAR},
      </if>
      <if test="curriculumNewId != null">
        #{curriculumNewId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.juwen.ibc.pojo.ExamLoreExercisesCurriculum">
    update exam_lore_exercises_curriculum
    <set>
      <if test="examLoreExercisesId != null">
        exam_lore_exercises_id = #{examLoreExercisesId,jdbcType=INTEGER},
      </if>
      <if test="curriculumId != null">
        curriculum_id = #{curriculumId,jdbcType=INTEGER},
      </if>
      <if test="examLoreExercisesNewId != null">
        exam_lore_exercises_new_id = #{examLoreExercisesNewId,jdbcType=VARCHAR},
      </if>
      <if test="curriculumNewId != null">
        curriculum_new_id = #{curriculumNewId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juwen.ibc.pojo.ExamLoreExercisesCurriculum">
    update exam_lore_exercises_curriculum
    set exam_lore_exercises_id = #{examLoreExercisesId,jdbcType=INTEGER},
      curriculum_id = #{curriculumId,jdbcType=INTEGER},
      exam_lore_exercises_new_id = #{examLoreExercisesNewId,jdbcType=VARCHAR},
      curriculum_new_id = #{curriculumNewId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>